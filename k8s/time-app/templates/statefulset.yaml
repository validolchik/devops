apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "time-app.fullname" . }}
  labels:
    {{- include "time-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "time-app.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "time-app.fullname" . }}
  podManagementPolicy: {{ .Values.statefulSet.podManagementPolicy }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "time-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "time-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: install
          image: busybox
          command:
            - wget
            - "-O"
            - "/downloads/index.html"
            - http://info.cern.ch
          volumeMounts:
            - name: downloads
              mountPath: {{ .Values.downloadsFolder }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: password
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: {{ .Values.configPath }}
              readOnly: {{ .Values.readOnlyConfig }}
            - name: visits
              mountPath: {{ .Values.visitsPath }}
            - name: downloads
              mountPath: {{ .Values.downloadsFolder }}
      dnsPolicy: Default
      volumes:
        - name: config
          configMap:
            name: {{ include "time-app.fullname" . }}
        - name: downloads
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: visits
      spec:
        {{- toYaml .Values.statefulSet.volumeClaimTemplates.spec | nindent 8}}